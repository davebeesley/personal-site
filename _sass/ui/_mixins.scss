/// <reference file="../vars" />

@mixin no-bullets {
	margin: 0;
	padding: 0;
	list-style: none outside none;
}


@mixin shadow {
	box-shadow: 3px 3px 0 rgba(0, 0, 0, 0.2);
}


@mixin inline-block-spacing-fix {
	letter-spacing: -0.31em;

	> * {
		display: inline-block;
		letter-spacing: normal;
		word-spacing: normal;
	}
}


@mixin muted {
	opacity: 0.5;
}


@mixin retina($path, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
		   (-o-min-device-pixel-ratio: 2.6/2),
		   (-webkit-min-device-pixel-ratio: 1.3),
		   (min-device-pixel-ratio: 1.3),
		   (min-resolution: 1.3dppx) {
		background-image: url($path);
		background-size: $width $height;
	}
}

/* Usage of retina mixin ^^ */
/*
.logo {
	background: url("logo.png") no-repeat;
	@include image-2x("logo2x.png", 100px, 25px);
}
*/


@mixin transition($properties) {
	@include vendor(transition, $properties);
}


@mixin opacity($number) {
	$number--whole: (100 * $number);

	-ms-filter: #{"progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $number--whole + ")"};
	-moz-opacity:  $number;
	-khtml-opacity:  $number;
	opacity:  $number;

}


@mixin category-icon($size) {
	width: $size;
	height: $size;
	font-size: $size;

	.category-icon__icon {
		line-height: $size;
	}
}


@mixin horizontal-gradient($from, $to, $stop: 100%) {
	/* fallback/image non-cover color */
	background-color: $from;
	/* Firefox 3.6+ */
	background-image: -moz-linear-gradient(left, $from 0%, $to $stop);
	/* Safari 4+, Chrome 1+ */
	background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $from), color-stop($stop, $to));
	/* Safari 5.1+, Chrome 10+ */
	background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);
	/* Opera 11.10+ */
	background-image: -o-linear-gradient(left, $from 0%, $to $stop);
	/* IE10+ */
	background: -ms-linear-gradient(left, $from 0%, $to $stop);
	/* Standard */
	background: linear-gradient(to right, $from 0%, $to $stop);
	/* IE6-9 */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 );
}


@mixin loop-category-colours($selector: '') {
	@each $category in $categories {
		$category-name: nth($category, 1);
		$category-colour: nth($category, 2);
		$category-colour--light: nth($category, 3);

		@if $selector == parent {
			$selector: '&';
		}

		#{$selector}.is-#{$category-name} {
			@content;
		}
	}
}

@mixin hamburger-bar {
	display: block;
	width: 26px;
	height: 7px;
	position: absolute;
	background: #fff;
	@include vendor("transform", translateY(0px) rotate(0));
	@include transition(all 300ms ease-out);
}